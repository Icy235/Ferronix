package Control;

import static com.calculate.ferronix.BuildConfig.API_KEY;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.res.Configuration;
import android.net.Uri;
import android.os.Bundle;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.Button;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.UUID;


import io.appmetrica.analytics.AppMetrica;
import io.appmetrica.analytics.AppMetricaConfig;
import io.appmetrica.analytics.profile.UserProfile;

import com.calculate.ferronix.R;
import com.calculate.ferronix.Sortament.SelectForm;
import com.calculate.ferronix.Sortament.gostPdf.Gost5264_80_pdf;
import com.google.android.material.dialog.MaterialAlertDialogBuilder;

public class MainMenu extends AppCompatActivity {
    private String userId;
    private static final String PREFS_NAME = "FerronixPrefs";
    private static final String KEY_USER_ID = "user_id";
    private static final String KEY_APP_LANGUAGE = "app_language";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —è–∑—ã–∫ –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º super.onCreate()
        loadLocale();

        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.main_menu);

        Button btnReportError = findViewById(R.id.btn_report_error);
        btnReportError.setOnClickListener(v -> {
            Intent emailIntent = new Intent(Intent.ACTION_SENDTO);
            emailIntent.setData(Uri.parse("mailto:me@icymail.ru"));
            emailIntent.putExtra(Intent.EXTRA_SUBJECT, "–û—à–∏–±–∫–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏");
            startActivity(Intent.createChooser(emailIntent, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç"));
        });

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AppMetrica
        AppMetricaConfig config = AppMetricaConfig.newConfigBuilder(API_KEY).build();
        AppMetrica.activate(this, config);
        AppMetrica.enableActivityAutoTracking(this.getApplication());

        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞/–ø–æ–ª—É—á–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        userId = setPersistentUserId(this);

        // –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—Ö–æ–¥–µ
        sendUserActionNotification("–í—Ö–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ");

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è AppMetric
        UserProfile userProfile = UserProfile.newBuilder().build();
        AppMetrica.setUserProfileID(userId);
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ AppMetric.
        AppMetrica.reportUserProfile(userProfile);
    }

    public void showLanguageDialog(View view) {
        final List<LanguageAdapter.LanguageItem> languages = Arrays.asList(
                new LanguageAdapter.LanguageItem("English", "en", R.drawable.ic_flag_us),
                new LanguageAdapter.LanguageItem("–†—É—Å—Å–∫–∏–π", "ru", R.drawable.ic_flag_ru),
                new LanguageAdapter.LanguageItem("Az…ôrbaycan", "az", R.drawable.ic_flag_az),
                new LanguageAdapter.LanguageItem("O ªzbekcha", "uz", R.drawable.ic_flag_uz),
                new LanguageAdapter.LanguageItem("‰∏≠Êñá", "zh", R.drawable.ic_flag_ch)

        );

        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫
        SharedPreferences prefs = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
        String currentLang = prefs.getString(KEY_APP_LANGUAGE, "");
        if (currentLang.isEmpty()) {
            currentLang = Locale.getDefault().getLanguage();
        }

        // –°–æ–∑–¥–∞–µ–º Material –¥–∏–∞–ª–æ–≥
        MaterialAlertDialogBuilder builder = new MaterialAlertDialogBuilder(
                this,
                R.style.LanguageDialogTheme
        );

        builder.setTitle(R.string.select_language);

        // –°–æ–∑–¥–∞–µ–º –∞–¥–∞–ø—Ç–µ—Ä
        LanguageAdapter adapter = new LanguageAdapter(this, languages, currentLang);

        String finalCurrentLang = currentLang;
        builder.setAdapter(adapter, (dialog, which) -> {
            String selectedCode = languages.get(which).code;
            if (!selectedCode.equals(finalCurrentLang)) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª–∏ —è–∑—ã–∫ –∏–∑–º–µ–Ω–∏–ª—Å—è
                setLanguageAndRecreate(selectedCode);
            }
        });

        builder.setNegativeButton(android.R.string.cancel, null);

        AlertDialog dialog = builder.create();
        dialog.show();

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
        Window window = dialog.getWindow();
        if (window != null) {
            window.getAttributes().windowAnimations = R.style.DialogAnimation;

            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤
            DisplayMetrics metrics = new DisplayMetrics();
            getWindowManager().getDefaultDisplay().getMetrics(metrics);

            int width = (int) (metrics.widthPixels * 0.9);
            int maxWidth = getResources().getDimensionPixelSize(R.dimen.dialog_max_width);
            if (width > maxWidth) width = maxWidth;

            window.setLayout(width, WindowManager.LayoutParams.WRAP_CONTENT);
            window.setBackgroundDrawableResource(R.drawable.dialog_bg_rounded);
        }
    }

    private void loadLocale() {
        SharedPreferences prefs = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
        String language = prefs.getString(KEY_APP_LANGUAGE, null);
        if (language != null) {
            setLocale(language);
        }
    }

    private void setLocale(String lang) {
        Locale locale = new Locale(lang);
        Locale.setDefault(locale);
        Configuration config = new Configuration();
        config.setLocale(locale);
        // Deprecated –≤ API 25+, –Ω–æ –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –±–æ–ª–µ–µ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π.
        // –î–ª—è –Ω–æ–≤—ã—Ö –≤–µ—Ä—Å–∏–π, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ createConfigurationContext.
        getBaseContext().getResources().updateConfiguration(config, getBaseContext().getResources().getDisplayMetrics());

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫
        SharedPreferences.Editor editor = getSharedPreferences(PREFS_NAME, MODE_PRIVATE).edit();
        editor.putString(KEY_APP_LANGUAGE, lang);
        editor.apply();
    }

    // –î–æ–±–∞–≤–ª–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π –º–µ—Ç–æ–¥
    private String getCurrentLanguage() {
        SharedPreferences prefs = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
        String savedLang = prefs.getString(KEY_APP_LANGUAGE, "");
        if (savedLang.isEmpty()) {
            return Locale.getDefault().getLanguage();
        }
        return savedLang;
    }

    private void setLanguageAndRecreate(String lang) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ null –¥–ª—è lang, —Ö–æ—Ç—è –æ–±—ã—á–Ω–æ –æ–Ω –Ω–µ –±—É–¥–µ—Ç null –∏–∑ –¥–∏–∞–ª–æ–≥–∞
        if (lang == null || lang.equals(getCurrentLanguage())) {
            return;
        }
        setLocale(lang);
        recreateWithAnimation();
    }

    private void recreateWithAnimation() {
        Intent intent = new Intent(this, getClass());
        intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
        startActivity(intent);
        overridePendingTransition(R.anim.fade_in, R.anim.fade_out);
        finish();
    }

    private void sendUserActionNotification(String action) {
        Map<String, String> data = new HashMap<>();
        data.put("UserID", userId);
        data.put("–î–µ–π—Å—Ç–≤–∏–µ", action);
        data.put("–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", android.os.Build.MODEL);
        data.put("–í—Ä–µ–º—è", new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.getDefault())
                .format(new Date()));

        String emoji = action.equals("–í—Ö–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ") ? "üë§" : "üö™";
        // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ NetworkHelper.sendTelegramNotification —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω.
        // –ï—Å–ª–∏ —ç—Ç–æ –∑–∞–≥–ª—É—à–∫–∞, –µ—ë –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
        NetworkHelper.sendTelegramNotification(
                this,
                data,
                emoji + " –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " + (action.equals("–í—Ö–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ") ? "–≤–æ—à–µ–ª" : "–≤—ã—à–µ–ª")
        );
    }

    private String setPersistentUserId(Context context) {
        SharedPreferences prefs = context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);
        String userId = prefs.getString(KEY_USER_ID, null);

        if (userId == null) {
            userId = UUID.randomUUID().toString();
            prefs.edit().putString(KEY_USER_ID, userId).apply();
        }
        Log.d("AppMetrica", "UserID: " + userId);
        return userId;
    }

    public void btnCalculateMetal(View view) {
        Intent intent = new Intent(MainMenu.this, SelectForm.class);
        startActivity(intent);
        overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left);
    }

    public void btnListGosts(View view) {
        // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–ª–∞—Å—Å GostsList —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ø–∞–∫–µ—Ç–µ Control.
        Intent intent = new Intent(MainMenu.this, GostsList.class);
        startActivity(intent);
        overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left);
    }

    public void btnWeldingSeams(View view){
        Intent intent = new Intent(MainMenu.this, Gost5264_80_pdf.class);
        startActivity(intent);
        overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left);
    }

    public void btnBeamMenu(View view) {
        // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞–µ—Ç MainMenu, —á—Ç–æ, –≤–µ—Ä–æ—è—Ç–Ω–æ, —è–≤–ª—è–µ—Ç—Å—è –æ—à–∏–±–∫–æ–π,
        // —Ç–∞–∫ –∫–∞–∫ –æ–Ω —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ MainMenu. –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥—Ä—É–≥–æ–π Activity.
        // –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–µ–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç–µ–∫—É—â–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, —Ç–æ –Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø—É—Å–∫–∞—Ç—å –Ω–æ–≤—É—é.
        // –ï—Å–ª–∏ —ç—Ç–æ –¥—Ä—É–≥–æ–µ –º–µ–Ω—é, –∏–∑–º–µ–Ω–∏—Ç–µ MainMenu.class –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∫–ª–∞—Å—Å.
        // –í —Ç–µ–∫—É—â–µ–º –≤–∏–¥–µ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç —Ç–µ–∫—É—â—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.
        Intent intent = new Intent(MainMenu.this, MainMenu.class);
        startActivity(intent);
        overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left);
    }
}